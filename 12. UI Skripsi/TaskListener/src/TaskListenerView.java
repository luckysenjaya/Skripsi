
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Luke
 */
public class TaskListenerView extends javax.swing.JFrame {
    private String directory = "";
    
    /**
     * Creates new form TaskListenerView
     */
    public TaskListenerView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jEmail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProcess = new javax.swing.JButton();
        jPassword = new javax.swing.JPasswordField();
        jDestination = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDirektori = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jEmail.setPreferredSize(new java.awt.Dimension(6, 20));

        jLabel1.setText("Email");

        jLabel2.setText("Password");

        jProcess.setText("Buat Kelas Java");
        jProcess.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jProcessMouseClicked(evt);
            }
        });
        jProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jProcessActionPerformed(evt);
            }
        });

        jPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordActionPerformed(evt);
            }
        });

        jDestination.setText("Direktori Tujuan");
        jDestination.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDestinationMouseClicked(evt);
            }
        });

        jLabel3.setText("Task Listener Generator");

        jLabel4.setText("Masukkan Email dan Password Gmail Sistem Camunda");

        jDirektori.setText("Direktori");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDirektori, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jProcess)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDestination)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPassword))))
                        .addContainerGap(65, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jDestination)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDirektori)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jProcess)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordActionPerformed

    private void jProcessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProcessMouseClicked
        try {
            // TODO add your handling code here:
            String email = jEmail.getText();
            String password ="";
            for (int i = 0; i < jPassword.getPassword().length; i++) {
                password += jPassword.getPassword()[i];
            }
            String code = generateCode(email, password);
            
            BufferedWriter bw = null;
            FileWriter fw = null;
            
            fw = new FileWriter(this.directory+"\\TaskAssignmentListener.java");
            bw = new BufferedWriter(fw);
            bw.write(code);

            if(bw!=null){
                bw.close();
            }
            if(fw!=null){
                fw.close();
            }
            JOptionPane.showMessageDialog(null, "TaskAssignmentListener.java berhasil dibuat");
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "TaskAssignmentListener.java gagal dibuat");
        }
        
        
        
        
        
        
        
    }//GEN-LAST:event_jProcessMouseClicked

    private void jDestinationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDestinationMouseClicked
        // TODO add your handling code here:
         JFileChooser chooser = new JFileChooser();
         chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
         if(chooser.showDialog(new JFrame(""), null)==JFileChooser.APPROVE_OPTION){
             directory = chooser.getSelectedFile().getAbsolutePath();
             this.jDirektori.setText(directory);
         }
         
    }//GEN-LAST:event_jDestinationMouseClicked

    private void jProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jProcessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jProcessActionPerformed

    private String generateCode(String email, String password){
        String code ="import java.util.List;\n"
                + "import java.util.Properties;\n"
                + "import java.util.Set;\n"
                + "import java.util.logging.Level;\n"
                + "import java.util.logging.Logger;\n"
                + "import javax.mail.Address;\n"
                + "import javax.mail.Message;\n" +
                "import javax.mail.MessagingException;\n" +
                "import javax.mail.NoSuchProviderException;\n" +
                "import javax.mail.Session;\n" +
                "import javax.mail.Transport;\n" +
                "import javax.mail.internet.MimeMessage;\n" +
                "import javax.mail.internet.InternetAddress;\n" +
                "\n" +
                "import org.camunda.bpm.engine.IdentityService;\n" +
                "import org.camunda.bpm.engine.delegate.DelegateTask;\n" +
                "import org.camunda.bpm.engine.delegate.TaskListener;\n" +
                "import org.camunda.bpm.engine.identity.User;\n" +
                "import org.camunda.bpm.engine.impl.context.Context;\n" +
                "import org.camunda.bpm.engine.impl.persistence.entity.IdentityLinkEntity;\n" +
                "import org.camunda.bpm.engine.impl.persistence.entity.TaskEntity;\n" +
                "import org.camunda.bpm.engine.task.IdentityLinkType;\n" +
                "\n" +
                "\n" +
                "public class TaskAssignmentListener implements TaskListener {\n" +
                "  private static final String HOST = \"smtp.gmail.com\";\n" +
                "  private static final String USER = \""+email+"\";\n" +
                "  private static final String PWD =\""+password+"\";\n" +
                "  \n" +
                "  String assignee;\n" +
                "  String taskId;\n" +
                "  String taskName;\n" +
                "  \n" +
                "  String[] recipient;\n" +
                "  \n" +
                "  static Properties props;\n" +
                "  static Session session;\n" +
                "  static MimeMessage message;\n" +
                "  \n" +
                "\n" +
                "  public void notify(DelegateTask delegateTask) {\n" +
                "    assignee = delegateTask.getAssignee();\n" +
                "    taskId = delegateTask.getId();\n" +
                "    taskName = delegateTask.getName();\n" +
                "    delegateTask.getCandidates();\n" +
                "    String email;\n" +
                "    \n" +
                "    if (assignee != null) {\n" +
                "      IdentityService identityService = Context.getProcessEngineConfiguration().getIdentityService();\n" +
                "      User user = identityService.createUserQuery().userId(assignee).singleResult();\n" +
                "      if (user != null) {\n" +
                "    	  this.sendEmail(user);\n" +
                "      }\n" +
                "    }\n" +
                "    else{\n" +
                "    	TaskEntity task = (TaskEntity)delegateTask;\n" +
                "    	List<IdentityLinkEntity> identityLinks = task.getIdentityLinks();\n" +
                "    	\n" +
                "    	for(IdentityLinkEntity link : identityLinks) {\n" +
                "    		if(link.getType().equals(IdentityLinkType.CANDIDATE)) {\n" +
                "    		    if(link.isUser()) {\n" +
                "	    		     User user = Context.getProcessEngineConfiguration().getIdentityService().createUserQuery().userId(link.getUserId()).singleResult();\n" +
                "	    		     sendEmail(user);\n" +
                "    		    }\n" +
                "    		    if(link.isGroup()) {\n" +
                "    		        List<User> users = Context.getProcessEngineConfiguration().getIdentityService().createUserQuery().memberOfGroup(link.getGroupId()).list();\n" +
                "    		        for(User user : users) {\n" +
                "    		        	sendEmail(user);\n" +
                "    		        }\n" +
                "    		    }\n" +
                "    		}\n" +
                "    	}\n" +
                "    }\n" +
                "    \n" +
                "  }\n" +
                "  \n" +
                "  public void sendEmail(User user){\n" +
                "      try {\n" +
                "          props = System.getProperties();\n" +
                "          props.put(\"mail.smtp.port\", \"587\");\n" +
                "          props.put(\"mail.smtp.auth\", \"true\");\n" +
                "          props.put(\"mail.smtp.starttls.enable\", \"true\");\n" +
                "\n" +
                "          \n" +
                "          session = Session.getDefaultInstance(props, null);\n" +
                "          message = new MimeMessage(session);\n" +
                "          message.addRecipient(Message.RecipientType.TO, new InternetAddress(user.getEmail()));\n" +
                "          message.setSubject(\"Task \" + taskName);\n" +
                "          \n" +
                "          \n" +
                "          String name = user.getFirstName();\n" +
                "          String emailBody =\"\";\n" +
                "          emailBody += \"Dear \"+name+\",<br>\";\n" +
                "          emailBody += \"Anda mendapatkan task \" +taskName + \" untuk dikerjakan.<br>\";\n" +
                "          emailBody += \"Segera akses http://localhost:1234/camunda/app/tasklist/default/#/?task=\"+taskId +\" untuk menjalankannya. <br>\";\n" +
                "          emailBody += \"Terima kasih.\";\n" +
                "          message.setContent(emailBody, \"text/html\");\n" +
                "          \n" +
                "\n" +
                "          Transport transport = session.getTransport(\"smtp\");            \n" +
                "          transport.connect(HOST, USER, PWD);\n" +
                "          transport.sendMessage(message, message.getAllRecipients());\n" +
                "          transport.close();\n" +
                "      } catch (NoSuchProviderException ex) {\n" +
                "          Logger.getLogger(TaskAssignmentListener.class.getName()).log(Level.SEVERE, null, ex);\n" +
                "      } catch (MessagingException ex) {\n" +
                "          Logger.getLogger(TaskAssignmentListener.class.getName()).log(Level.SEVERE, null, ex);\n" +
                "      }\n" +
                "  }}";
        return code;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskListenerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskListenerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskListenerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskListenerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskListenerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jDestination;
    private javax.swing.JLabel jDirektori;
    private javax.swing.JTextField jEmail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JButton jProcess;
    // End of variables declaration//GEN-END:variables
}
